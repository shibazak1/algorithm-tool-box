
'''
Covering Segments by Points Problem

Find the minimum number of points needed to cover all given segments on a line.

Input: A sequence of n segments [l1 , r1 ], . . . , [ln , rn ] on a line.

Output: A set of points of minimum size such that each segment
[li , ri ] contains a point, i.e., there exists a point x from this set such that
li ≤ x ≤ ri .
'''

#-----------------------------------------------------------------------------------

def MinimumNumberOfPoint(segments):


    points = []
    first_ending_seg = segments[0]

    while segments:
        print("enter while")
        
        for i in range(1,len(segments)):
            if segments[i][1]<= first_ending_seg[1]:
                first_ending_seg = segments[i]


        curr_point = first_ending_seg[1]
        points.append(curr_point)


        for seg in segments:
            print("segments = ",segments)
            print("seg = ",seg)
            if seg[0]<= curr_point and seg[1]>=curr_point:
                segments.remove(seg)
    return points





if __name__ == '__main__':

    segments = []
    n = int(input("enter n: "))
    
    for i in range(n):
        seg = list(map(int,input().split()))
        segments.append(seg)


    points = MinimumNumberOfPoint(segments)
    print(len(points),points)
 
